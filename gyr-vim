#!/bin/bash
################################################################################
#
# Author: Gustavo Yokoyama Ribeiro <gustavoyr+scripts AT gmail DOT com>
# File:  gyr-vim
# Update: 20110222 16:58:45
# (C) Copyright 2010 Gustavo Yokoyama Ribeiro
# Licensed under CreativeCommons Attribution-ShareAlike 3.0 Unsupported
# http://creativecommons.org/licenses/by-sa/3.0/ for more info.
# Description: vim server wrapper
# Usage: gyr-vim [-gv] [filename]
#   -g: use gvim server
#   -v: use vim server
#   -h: remote acess (scp)
#   -f: autosearch filename
#
################################################################################

# on ubuntu need vim-gnome package

[ "$1" = '--help' ] && { gyr-print-helper $0; exit 0; }

# Always exit on errors
set -e
# Undefined variables, we don't like you
set -u
# ERR traps are inherited by shell functions, command substitutions and
# commands executed in a subshell environment.
set -E

_server_name=
_remote_host=

while getopts 'h:f:gv' OPT_NAME 2> /dev/null; do
    case ${OPT_NAME} in
        'g')
            _server_name='GVIMGYR'
            ;;
        'v')
            _server_name='VIMGYR'
            ;;
        'h')
            _remote_host="scp://${OPTARG}"
            ;;
        'f')
            _file_name="$(which ${OPTARG})"
            ;;
        '?')
            gyr-print -e ${0##*/} "Invalid option: -${OPTARG}."
            exit 1
            ;;
        ':')
            gyr-print -e ${0##*/} "Required argument not found for option -${OPTARG}."
            exit 1
            ;;
        *)
            gyr-print -e ${0##*/} "Unknown error while processing options."
            exit 1
            ;;
    esac
done

(( OPTIND > 1 )) && shift $(( OPTIND - 1 ))

if [ -n "${_remote_host}" ]; then
    _file_name="${_remote_host}/${*}"
else
    _file_name=${_file_name:-${*}}
fi

if [ -n "${_server_name}" ]; then
    for i in $(vim --serverlist | tr "\n" " "); do
        if [ "${i}" = "${_server_name}" ]; then
            if [ -n "${_file_name}" ]; then
                _server_name="${_server_name} --remote-silent"
            else
                gyr-print -e ${0##*/} "vim server (${_server_name}) is already running"
                exit 0
            fi
        fi
    done
    _server_name="--servername ${_server_name}"
fi

vim ${_server_name} ${_file_name}
