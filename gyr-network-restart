#!/usr/bin/env bash
################################################################################
#
# Author: Gustavo Yokoyama Ribeiro <gyr AT protonmail DOT ch>
# File:  gyr-network-restart
# Update: 20120202
# (C) Copyright 2012 Gustavo Yokoyama Ribeiro
# Licensed under CreativeCommons Attribution-ShareAlike 3.0 Unsupported
# http://creativecommons.org/licenses/by-sa/3.0/ for more info.
# Description: Config wifi
# Usage: gyr-network-restart
#
################################################################################

# Always exit on errors
set -e
# Undefined variables, we don't like you
set -u
# ERR traps are inherited by shell functions, command substitutions and
# commands executed in a subshell environment.
set -E

while getopts 'n' OPT_NAME 2> /dev/null; do
    case ${OPT_NAME} in
        'n')
            _target='applet'
            ;;
        '?')
            gyr-print -e ${0##*/} "Invalid option".
            exit 1
            ;;
        ':')
            gyr-print -e ${0##*/} "Required argument not found for option -${OPTARG}."
            exit 1
            ;;
        *)
            gyr-print -e ${0##*/} "Unknown error while processing options."
            exit 1
            ;;
    esac
done

gyr-print -i "Finishing previous vnp service..."
sudo -S kill -9 $(pgrep openconnect) ||:
gyr-print -i "...[DONE]"

gyr-print -i "Terminating nm-applet..."
killall nm-applet |:
gyr-print -i "...[DONE]"

gyr-print -i "Restarting networking.service..."
sudo systemctl restart networking.service
gyr-print -i "...[DONE]"

gyr-print -i "Restarting NetworkManager.service..."
sudo systemctl restart NetworkManager.service
gyr-print -i "...[DONE]"

if [ "${_target:-gyr}" = 'applet' ]; then
    gyr-print -i "Starting nm-applet..."
    nm-applet &
    gyr-print -i "...[DONE]"
fi
