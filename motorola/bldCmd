#!/bin/zsh
##################################
#
# Author: Gustavo Yokoyama Ribeiro
# File:   bldCmd
# Update: 20080423 16:17:35
# (C) Copyright 2010 Gustavo Yokoyama Ribeiro
# Licensed under CreativeCommons Attribution-ShareAlike 3.0 Unsupported
# http://creativecommons.org/licenses/by-sa/3.0/ for more info.
# Description: Build launcher.
# Usage: bldCmd [view_pattern|view_name]
#
##################################

[[ $# -gt 1 ]] && { gyr-print -e "$0:t"; exit 1; }
[[ $1 == "--help" ]] && { gyr-print-helper $0; exit 0; }

BLD_PATH="/vobs/linuxjava/platform"
DIR_LOG="${HOME}/bldlogs"
BLD_SRV="rdlxbd01"

if [[ $# -eq 0 && -n ${CLEARCASE_ROOT} ]]; then
    SELECTED_VIEW=${CLEARCASE_ROOT:t}
else
    SELECTED_VIEW=$(getView $1) || { gyr-print -e "$0:t" "${SELECTED_VIEW}"; exit 1; }
fi

# forces an array to have unique contents and duplicate values are ignored.
typeset -U cmd_list
cmd_list=("${(f)$(cleartool catcs -tag ${SELECTED_VIEW} | sed -n -e 's/.*clearmake/clearmake/g' -e '/^clearmake/p')}")
[[ ${#cmd_list} -eq 0 ]] && { gyr-print -e "$0:t" "No build command found."; exit 1; }

PS3="Select base build command: "
select BLD_CMD in ${cmd_list}; { break; }

[[ -z ${BLD_CMD} ]] && { gyr-print -e "$0:t" "Invalid option."; exit 1; }

echo -n "\nBuild command: "
gyr-echo "${BLD_CMD}"
#read -q "?Edit build command? [ny] " && vared BLD_CMD

gyr-echo "\nBuilding view ${SELECTED_VIEW}..."
#REMOTE_CMD="cleartool setview -exec 'submit \"cd ${BLD_PATH} && ${BLD_CMD}\"' ${SELECTED_VIEW}"
REMOTE_CMD="cleartool setview -exec 'bsub -I -q lj \"cd ${BLD_PATH} && ${BLD_CMD}\"' ${SELECTED_VIEW}"
remoteCmd ${BLD_SRV} "${REMOTE_CMD}" && RESULT_CMD=$(tail -n 1 <(zcat ${*:-${DIR_LOG}/*(om[1])}))
if [[ -n ${RESULT_CMD} ]]; then
    sendMsgWin "--------------------\nATTENTION:\nBuild from view ${SELECTED_VIEW} finished.\n\nRESULT: ${RESULT_CMD}\n--------------------" && gyr-echo "Building view ${SELECTED_VIEW}... done" || gyr-echo "Building view ${SELECTED_VIEW}... failed"
fi
