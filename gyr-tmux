#!/usr/bin/env bash
################################################################################
#
# Author: Gustavo Yokoyama Ribeiro <gyr AT protonmail DOT ch>
# File:  gyr-tmux
# Update: 20100920 13:32:45
# (C) Copyright 2010 Gustavo Yokoyama Ribeiro
# Licensed under CreativeCommons Attribution-ShareAlike 3.0 Unsupported
# http://creativecommons.org/licenses/by-sa/3.0/ for more info.
# Description: tmux wrapper
# Usage: gyr-tmux <command>
#
################################################################################

[ "$1" = '--help' ] && { gyr-print-helper $0; exit 0; }

# Always exit on errors
set -e
# Undefined variables, we don't like you
set -u
# ERR traps are inherited by shell functions, command substitutions and
# commands executed in a subshell environment.
set -E

_base_session="${USER}${HOSTNAME%.*}"
_client_session=${_base_session}


if [ $# -eq 0 ]; then
    #tmux -2 new-session -d -t ${_base_session} -s ${_client_session} \; set-option -q destroy-unattached \; attach-session -t ${_client_session}
    # since tmux 1.8 -A option is available:
    ##exec tmux -2 new-session -A -D -t ${_base_session} -s ${_client_session} \; set-option -q destroy-unattached
    exec tmux -2 new-session -A -D -s ${_client_session}
    #if tmux -q has-session -t $USER@$HOSTNAME; then
    #    exec tmux -2 attach-session -d -t $USER@$HOSTNAME
    #else
    #    exec tmux -2 new-session -s $USER@$HOSTNAME
    #fi
elif [ $# -ge 1 ]; then
    if tmux -q has-session -t ${_base_session}; then
        tmux new-window -c ~ -t ${_base_session} "exec $*"
        tmux attach-session -d -t ${_base_session}
    else
        exec tmux -2 new-session -A -D -s ${_client_session} "exec $*" \;
    fi
else
    gyr-print -e ${0##*/} "Unknown error"
fi
